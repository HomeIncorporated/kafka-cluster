---
- name: download {{ url }}
  run_once: true
  get_url:
    url: "{{ url }}"
    dest: "{{ download }}/{{ file }}"

- name: create directory /usr/local/Burrow_{{ version }}
  become: yes
  file:
    path: /usr/local/Burrow_{{ version }}
    state: directory
    recurse: yes
    owner: root
    group: root
  notify: "restart burrow"

- name: extract {{ download }}/{{ file }} to /usr/local/Burrow_{{ version }}
  become: yes
  unarchive:
    src: "{{ download }}/{{ file }}"
    dest: /usr/local/Burrow_{{ version }}
    remote_src: true
  notify: "restart burrow"

- name: copy burrow template configuration
  become: yes
  template:
    src: templates/{{ item }}.j2
    dest: /usr/local/Burrow_{{ version }}/config/{{ item }}
  with_items:
    - burrow.toml

- name: copy burrow configuration
  become: yes
  copy:
    remote_src: false
    src: templates/{{ item }}
    dest: /usr/local/Burrow_{{ version }}/config/{{ item }}
  with_items:
    - burrow-request.tmpl
  notify: "restart burrow"

- name: allow burrow to connect to kafka
  shell: "KAFKA_OPTS=-Djava.security.auth.login.config=/usr/local/kafka/config/zookeeper_jaas.conf /usr/local/kafka/bin/kafka-acls.sh --authorizer-properties zookeeper.connect=localhost:2181 --add --consumer --topic __consumer_offsets --allow-principal User:CN=kafka,OU=org,O=org,L=home,ST=Bavaria,C=DE  --group burrow"
  run_once: true

- name: install burrow systemd unit file
  become: yes
  template:
    src: templates/burrow.service.j2
    dest: "{{ system_units }}/burrow.service"
  notify: "restart burrow"
