---
- name: download {{ url }}
  run_once: true
  get_url:
    url: "{{ url }}"
    dest: "{{ download }}/{{ file }}"
    checksum: "{{ checksum }}"

- name: install {{ download }}/{{ file }}
  become: yes
  yum:
    name: "{{ download }}/{{ file }}"
    state: present
  notify: "restart kibana"

- name: copy /etc/kibana/kibana.yml
  become: yes
  template:
    src: templates/kibana.yml.j2
    dest: /etc/kibana/kibana.yml
  notify: "restart kibana"

- name: run handlers
  meta: flush_handlers

- name: wait until kibana api is reachable
  uri:
    url: http://{{ inventory_hostname }}:5601/api
    status_code: 404
  retries: 5
  delay: 5
  register: result
  until: result.status == 404

- name: create index patterns
  uri:
    url: "http://{{ inventory_hostname }}:5601/api/saved_objects/index-pattern/{{ item }}?overwrite=true"
    method: POST
    headers:
      kbn-xsrf: true
    body_format: json
    body: "{ \"attributes\": { \"title\": \"{{ item }}\", \"timeFieldName\": \"@timestamp\" } }"
  with_items:
    - burrow-*

- name: set default index pattern
  uri:
    url: "http://{{ inventory_hostname }}:5601/api/kibana/settings/defaultIndex"
    method: POST
    headers:
      kbn-xsrf: true
    body_format: json
    body: "{ \"value\": \"burrow-*\"  }"

#- name: import dashboards
#  uri:
#    url: "http://{{ inventory_hostname }}:5601/api/kibana/dashboards/import?force=true"
#    method: POST
#    headers:
#      kbn-xsrf: true
#    body_format: json
#    src: dashboards/{{ item }}
#  with_items:
